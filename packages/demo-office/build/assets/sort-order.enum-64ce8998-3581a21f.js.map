{"version":3,"file":"sort-order.enum-64ce8998-3581a21f.js","sources":["../../../components/dist/esm/sort-order.enum-64ce8998.js"],"sourcesContent":["import { c as createCommonjsModule, a as commonjsGlobal } from './_commonjsHelpers-ba3f0406.js';\n\nvar fuzzysort = createCommonjsModule(function (module) {\n((root, UMD) => {\r\n  if(module.exports) module.exports = UMD();\r\n  else root['fuzzysort'] = UMD();\r\n})(commonjsGlobal, _ => {\r\n\r\n  var single = (search, target) => {                                                                                                                                                                                                                        if(search=='farzher')return {target:\"farzher was here (^-^*)/\",score:0,_indexes:[0]}\r\n    if(!search || !target) return NULL\r\n\r\n    var preparedSearch = getPreparedSearch(search);\r\n    if(!isObj(target)) target = getPrepared(target);\r\n\r\n    var searchBitflags = preparedSearch.bitflags;\r\n    if((searchBitflags & target._bitflags) !== searchBitflags) return NULL\r\n\r\n    return algorithm(preparedSearch, target)\r\n  };\r\n\r\n\r\n  var go = (search, targets, options) => {                                                                                                                                                                                                                  if(search=='farzher')return [{target:\"farzher was here (^-^*)/\",score:0,_indexes:[0],obj:targets?targets[0]:NULL}]\r\n    if(!search) return options&&options.all ? all(search, targets, options) : noResults\r\n\r\n    var preparedSearch = getPreparedSearch(search);\r\n    var searchBitflags = preparedSearch.bitflags;\r\n\r\n    var threshold = options&&options.threshold || INT_MIN;\r\n    var limit     = options&&options['limit']  || INT_MAX; // for some reason only limit breaks when minified\r\n\r\n    var resultsLen = 0; var limitedCount = 0;\r\n    var targetsLen = targets.length;\r\n\r\n    // This code is copy/pasted 3 times for performance reasons [options.keys, options.key, no keys]\r\n\r\n    // options.key\r\n    if(options && options.key) {\r\n      var key = options.key;\r\n      for(var i = 0; i < targetsLen; ++i) { var obj = targets[i];\r\n        var target = getValue(obj, key);\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target);\r\n\r\n        if((searchBitflags & target._bitflags) !== searchBitflags) continue\r\n        var result = algorithm(preparedSearch, target);\r\n        if(result === NULL) continue\r\n        if(result.score < threshold) continue\r\n\r\n        // have to clone result so duplicate targets from different obj can each reference the correct obj\r\n        result = {target:result.target, _targetLower:'', _targetLowerCodes:NULL, _nextBeginningIndexes:NULL, _bitflags:0, score:result.score, _indexes:result._indexes, obj:obj}; // hidden\r\n\r\n        if(resultsLen < limit) { q.add(result); ++resultsLen; }\r\n        else {\r\n          ++limitedCount;\r\n          if(result.score > q.peek().score) q.replaceTop(result);\r\n        }\r\n      }\r\n\r\n    // options.keys\r\n    } else if(options && options.keys) {\r\n      var scoreFn = options['scoreFn'] || defaultScoreFn;\r\n      var keys = options.keys;\r\n      var keysLen = keys.length;\r\n      for(var i = 0; i < targetsLen; ++i) { var obj = targets[i];\r\n        var objResults = new Array(keysLen);\r\n        for (var keyI = 0; keyI < keysLen; ++keyI) {\r\n          var key = keys[keyI];\r\n          var target = getValue(obj, key);\r\n          if(!target) { objResults[keyI] = NULL; continue }\r\n          if(!isObj(target)) target = getPrepared(target);\r\n\r\n          if((searchBitflags & target._bitflags) !== searchBitflags) objResults[keyI] = NULL;\r\n          else objResults[keyI] = algorithm(preparedSearch, target);\r\n        }\r\n        objResults.obj = obj; // before scoreFn so scoreFn can use it\r\n        var score = scoreFn(objResults);\r\n        if(score === NULL) continue\r\n        if(score < threshold) continue\r\n        objResults.score = score;\r\n        if(resultsLen < limit) { q.add(objResults); ++resultsLen; }\r\n        else {\r\n          ++limitedCount;\r\n          if(score > q.peek().score) q.replaceTop(objResults);\r\n        }\r\n      }\r\n\r\n    // no keys\r\n    } else {\r\n      for(var i = 0; i < targetsLen; ++i) { var target = targets[i];\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target);\r\n\r\n        if((searchBitflags & target._bitflags) !== searchBitflags) continue\r\n        var result = algorithm(preparedSearch, target);\r\n        if(result === NULL) continue\r\n        if(result.score < threshold) continue\r\n        if(resultsLen < limit) { q.add(result); ++resultsLen; }\r\n        else {\r\n          ++limitedCount;\r\n          if(result.score > q.peek().score) q.replaceTop(result);\r\n        }\r\n      }\r\n    }\r\n\r\n    if(resultsLen === 0) return noResults\r\n    var results = new Array(resultsLen);\r\n    for(var i = resultsLen - 1; i >= 0; --i) results[i] = q.poll();\r\n    results.total = resultsLen + limitedCount;\r\n    return results\r\n  };\r\n\r\n\r\n  var highlight = (result, hOpen, hClose) => {\r\n    if(typeof hOpen === 'function') return highlightCallback(result, hOpen)\r\n    if(result === NULL) return NULL\r\n    if(hOpen === undefined) hOpen = '<b>';\r\n    if(hClose === undefined) hClose = '</b>';\r\n    var highlighted = '';\r\n    var matchesIndex = 0;\r\n    var opened = false;\r\n    var target = result.target;\r\n    var targetLen = target.length;\r\n    var indexes = result._indexes;\r\n    indexes = indexes.slice(0, indexes.len).sort((a,b)=>a-b);\r\n    for(var i = 0; i < targetLen; ++i) { var char = target[i];\r\n      if(indexes[matchesIndex] === i) {\r\n        ++matchesIndex;\r\n        if(!opened) { opened = true;\r\n          highlighted += hOpen;\r\n        }\r\n\r\n        if(matchesIndex === indexes.length) {\r\n          highlighted += char + hClose + target.substr(i+1);\r\n          break\r\n        }\r\n      } else {\r\n        if(opened) { opened = false;\r\n          highlighted += hClose;\r\n        }\r\n      }\r\n      highlighted += char;\r\n    }\r\n\r\n    return highlighted\r\n  };\r\n  var highlightCallback = (result, cb) => {\r\n    if(result === NULL) return NULL\r\n    var target = result.target;\r\n    var targetLen = target.length;\r\n    var indexes = result._indexes;\r\n    indexes = indexes.slice(0, indexes.len).sort((a,b)=>a-b);\r\n    var highlighted = '';\r\n    var matchI = 0;\r\n    var indexesI = 0;\r\n    var opened = false;\r\n    var result = [];\r\n    for(var i = 0; i < targetLen; ++i) { var char = target[i];\r\n      if(indexes[indexesI] === i) {\r\n        ++indexesI;\r\n        if(!opened) { opened = true;\r\n          result.push(highlighted); highlighted = '';\r\n        }\r\n\r\n        if(indexesI === indexes.length) {\r\n          highlighted += char;\r\n          result.push(cb(highlighted, matchI++)); highlighted = '';\r\n          result.push(target.substr(i+1));\r\n          break\r\n        }\r\n      } else {\r\n        if(opened) { opened = false;\r\n          result.push(cb(highlighted, matchI++)); highlighted = '';\r\n        }\r\n      }\r\n      highlighted += char;\r\n    }\r\n    return result\r\n  };\r\n\r\n\r\n  var indexes = result => result._indexes.slice(0, result._indexes.len).sort((a,b)=>a-b);\r\n\r\n\r\n  var prepare = (target) => {\r\n    if(typeof target !== 'string') target = '';\r\n    var info = prepareLowerInfo(target);\r\n    return {'target':target, _targetLower:info._lower, _targetLowerCodes:info.lowerCodes, _nextBeginningIndexes:NULL, _bitflags:info.bitflags, 'score':NULL, _indexes:[0], 'obj':NULL} // hidden\r\n  };\r\n\r\n\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n\r\n\r\n  var prepareSearch = (search) => {\r\n    if(typeof search !== 'string') search = '';\r\n    search = search.trim();\r\n    var info = prepareLowerInfo(search);\r\n\r\n    var spaceSearches = [];\r\n    if(info.containsSpace) {\r\n      var searches = search.split(/\\s+/);\r\n      searches = [...new Set(searches)]; // distinct\r\n      for(var i=0; i<searches.length; i++) {\r\n        if(searches[i] === '') continue\r\n        var _info = prepareLowerInfo(searches[i]);\r\n        spaceSearches.push({lowerCodes:_info.lowerCodes, _lower:searches[i].toLowerCase(), containsSpace:false});\r\n      }\r\n    }\r\n\r\n    return {lowerCodes: info.lowerCodes, bitflags: info.bitflags, containsSpace: info.containsSpace, _lower: info._lower, spaceSearches: spaceSearches}\r\n  };\r\n\r\n\r\n\r\n  var getPrepared = (target) => {\r\n    if(target.length > 999) return prepare(target) // don't cache huge targets\r\n    var targetPrepared = preparedCache.get(target);\r\n    if(targetPrepared !== undefined) return targetPrepared\r\n    targetPrepared = prepare(target);\r\n    preparedCache.set(target, targetPrepared);\r\n    return targetPrepared\r\n  };\r\n  var getPreparedSearch = (search) => {\r\n    if(search.length > 999) return prepareSearch(search) // don't cache huge searches\r\n    var searchPrepared = preparedSearchCache.get(search);\r\n    if(searchPrepared !== undefined) return searchPrepared\r\n    searchPrepared = prepareSearch(search);\r\n    preparedSearchCache.set(search, searchPrepared);\r\n    return searchPrepared\r\n  };\r\n\r\n\r\n  var all = (search, targets, options) => {\r\n    var results = []; results.total = targets.length;\r\n\r\n    var limit = options && options.limit || INT_MAX;\r\n\r\n    if(options && options.key) {\r\n      for(var i=0;i<targets.length;i++) { var obj = targets[i];\r\n        var target = getValue(obj, options.key);\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target);\r\n        target.score = INT_MIN;\r\n        target._indexes.len = 0;\r\n        var result = target;\r\n        result = {target:result.target, _targetLower:'', _targetLowerCodes:NULL, _nextBeginningIndexes:NULL, _bitflags:0, score:target.score, _indexes:NULL, obj:obj}; // hidden\r\n        results.push(result); if(results.length >= limit) return results\r\n      }\r\n    } else if(options && options.keys) {\r\n      for(var i=0;i<targets.length;i++) { var obj = targets[i];\r\n        var objResults = new Array(options.keys.length);\r\n        for (var keyI = options.keys.length - 1; keyI >= 0; --keyI) {\r\n          var target = getValue(obj, options.keys[keyI]);\r\n          if(!target) { objResults[keyI] = NULL; continue }\r\n          if(!isObj(target)) target = getPrepared(target);\r\n          target.score = INT_MIN;\r\n          target._indexes.len = 0;\r\n          objResults[keyI] = target;\r\n        }\r\n        objResults.obj = obj;\r\n        objResults.score = INT_MIN;\r\n        results.push(objResults); if(results.length >= limit) return results\r\n      }\r\n    } else {\r\n      for(var i=0;i<targets.length;i++) { var target = targets[i];\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target);\r\n        target.score = INT_MIN;\r\n        target._indexes.len = 0;\r\n        results.push(target); if(results.length >= limit) return results\r\n      }\r\n    }\r\n\r\n    return results\r\n  };\r\n\r\n\r\n  var algorithm = (preparedSearch, prepared, allowSpaces=false) => {\r\n    if(allowSpaces===false && preparedSearch.containsSpace) return algorithmSpaces(preparedSearch, prepared)\r\n\r\n    var searchLower = preparedSearch._lower;\r\n    var searchLowerCodes = preparedSearch.lowerCodes;\r\n    var searchLowerCode = searchLowerCodes[0];\r\n    var targetLowerCodes = prepared._targetLowerCodes;\r\n    var searchLen = searchLowerCodes.length;\r\n    var targetLen = targetLowerCodes.length;\r\n    var searchI = 0; // where we at\r\n    var targetI = 0; // where you at\r\n    var matchesSimpleLen = 0;\r\n\r\n    // very basic fuzzy match; to remove non-matching targets ASAP!\r\n    // walk through target. find sequential matches.\r\n    // if all chars aren't found then exit\r\n    for(;;) {\r\n      var isMatch = searchLowerCode === targetLowerCodes[targetI];\r\n      if(isMatch) {\r\n        matchesSimple[matchesSimpleLen++] = targetI;\r\n        ++searchI; if(searchI === searchLen) break\r\n        searchLowerCode = searchLowerCodes[searchI];\r\n      }\r\n      ++targetI; if(targetI >= targetLen) return NULL // Failed to find searchI\r\n    }\r\n\r\n    var searchI = 0;\r\n    var successStrict = false;\r\n    var matchesStrictLen = 0;\r\n\r\n    var nextBeginningIndexes = prepared._nextBeginningIndexes;\r\n    if(nextBeginningIndexes === NULL) nextBeginningIndexes = prepared._nextBeginningIndexes = prepareNextBeginningIndexes(prepared.target);\r\n    targetI = matchesSimple[0]===0 ? 0 : nextBeginningIndexes[matchesSimple[0]-1];\r\n\r\n    // Our target string successfully matched all characters in sequence!\r\n    // Let's try a more advanced and strict test to improve the score\r\n    // only count it as a match if it's consecutive or a beginning character!\r\n    var backtrackCount = 0;\r\n    if(targetI !== targetLen) for(;;) {\r\n      if(targetI >= targetLen) {\r\n        // We failed to find a good spot for this search char, go back to the previous search char and force it forward\r\n        if(searchI <= 0) break // We failed to push chars forward for a better match\r\n\r\n        ++backtrackCount; if(backtrackCount > 200) break // exponential backtracking is taking too long, just give up and return a bad match\r\n\r\n        --searchI;\r\n        var lastMatch = matchesStrict[--matchesStrictLen];\r\n        targetI = nextBeginningIndexes[lastMatch];\r\n\r\n      } else {\r\n        var isMatch = searchLowerCodes[searchI] === targetLowerCodes[targetI];\r\n        if(isMatch) {\r\n          matchesStrict[matchesStrictLen++] = targetI;\r\n          ++searchI; if(searchI === searchLen) { successStrict = true; break }\r\n          ++targetI;\r\n        } else {\r\n          targetI = nextBeginningIndexes[targetI];\r\n        }\r\n      }\r\n    }\r\n\r\n    // check if it's a substring match\r\n    var substringIndex = prepared._targetLower.indexOf(searchLower, matchesSimple[0]); // perf: this is slow\r\n    var isSubstring = ~substringIndex;\r\n    if(isSubstring && !successStrict) { // rewrite the indexes from basic to the substring\r\n      for(var i=0; i<matchesSimpleLen; ++i) matchesSimple[i] = substringIndex+i;\r\n    }\r\n    var isSubstringBeginning = false;\r\n    if(isSubstring) {\r\n      isSubstringBeginning = prepared._nextBeginningIndexes[substringIndex-1] === substringIndex;\r\n    }\r\n\r\n    { // tally up the score & keep track of matches for highlighting later\r\n      if(successStrict) { var matchesBest = matchesStrict; var matchesBestLen = matchesStrictLen; }\r\n      else { var matchesBest = matchesSimple; var matchesBestLen = matchesSimpleLen; }\r\n\r\n      var score = 0;\r\n\r\n      var extraMatchGroupCount = 0;\r\n      for(var i = 1; i < searchLen; ++i) {\r\n        if(matchesBest[i] - matchesBest[i-1] !== 1) {score -= matchesBest[i]; ++extraMatchGroupCount;}\r\n      }\r\n      var unmatchedDistance = matchesBest[searchLen-1] - matchesBest[0] - (searchLen-1);\r\n\r\n      score -= (12+unmatchedDistance) * extraMatchGroupCount; // penality for more groups\r\n\r\n      if(matchesBest[0] !== 0) score -= matchesBest[0]*matchesBest[0]*.2; // penality for not starting near the beginning\r\n\r\n      if(!successStrict) {\r\n        score *= 1000;\r\n      } else {\r\n        // successStrict on a target with too many beginning indexes loses points for being a bad target\r\n        var uniqueBeginningIndexes = 1;\r\n        for(var i = nextBeginningIndexes[0]; i < targetLen; i=nextBeginningIndexes[i]) ++uniqueBeginningIndexes;\r\n\r\n        if(uniqueBeginningIndexes > 24) score *= (uniqueBeginningIndexes-24)*10; // quite arbitrary numbers here ...\r\n      }\r\n\r\n      if(isSubstring)          score /= 1+searchLen*searchLen*1; // bonus for being a full substring\r\n      if(isSubstringBeginning) score /= 1+searchLen*searchLen*1; // bonus for substring starting on a beginningIndex\r\n\r\n      score -= targetLen - searchLen; // penality for longer targets\r\n      prepared.score = score;\r\n\r\n      for(var i = 0; i < matchesBestLen; ++i) prepared._indexes[i] = matchesBest[i];\r\n      prepared._indexes.len = matchesBestLen;\r\n\r\n      return prepared\r\n    }\r\n  };\r\n  var algorithmSpaces = (preparedSearch, target) => {\r\n    var seen_indexes = new Set();\r\n    var score = 0;\r\n    var result = NULL;\r\n\r\n    var first_seen_index_last_search = 0;\r\n    var searches = preparedSearch.spaceSearches;\r\n    for(var i=0; i<searches.length; ++i) {\r\n      var search = searches[i];\r\n\r\n      result = algorithm(search, target);\r\n      if(result === NULL) return NULL\r\n\r\n      score += result.score;\r\n\r\n      // dock points based on order otherwise \"c man\" returns Manifest.cpp instead of CheatManager.h\r\n      if(result._indexes[0] < first_seen_index_last_search) {\r\n        score -= first_seen_index_last_search - result._indexes[0];\r\n      }\r\n      first_seen_index_last_search = result._indexes[0];\r\n\r\n      for(var j=0; j<result._indexes.len; ++j) seen_indexes.add(result._indexes[j]);\r\n    }\r\n\r\n    // allows a search with spaces that's an exact substring to score well\r\n    var allowSpacesResult = algorithm(preparedSearch, target, /*allowSpaces=*/true);\r\n    if(allowSpacesResult !== NULL && allowSpacesResult.score > score) {\r\n      return allowSpacesResult\r\n    }\r\n\r\n    result.score = score;\r\n\r\n    var i = 0;\r\n    for (let index of seen_indexes) result._indexes[i++] = index;\r\n    result._indexes.len = i;\r\n\r\n    return result\r\n  };\r\n\r\n\r\n  var prepareLowerInfo = (str) => {\r\n    var strLen = str.length;\r\n    var lower = str.toLowerCase();\r\n    var lowerCodes = []; // new Array(strLen)    sparse array is too slow\r\n    var bitflags = 0;\r\n    var containsSpace = false; // space isn't stored in bitflags because of how searching with a space works\r\n\r\n    for(var i = 0; i < strLen; ++i) {\r\n      var lowerCode = lowerCodes[i] = lower.charCodeAt(i);\r\n\r\n      if(lowerCode === 32) {\r\n        containsSpace = true;\r\n        continue // it's important that we don't set any bitflags for space\r\n      }\r\n\r\n      var bit = lowerCode>=97&&lowerCode<=122 ? lowerCode-97 // alphabet\r\n              : lowerCode>=48&&lowerCode<=57  ? 26           // numbers\r\n                                                             // 3 bits available\r\n              : lowerCode<=127                ? 30           // other ascii\r\n              :                                 31;           // other utf8\r\n      bitflags |= 1<<bit;\r\n    }\r\n\r\n    return {lowerCodes:lowerCodes, bitflags:bitflags, containsSpace:containsSpace, _lower:lower}\r\n  };\r\n  var prepareBeginningIndexes = (target) => {\r\n    var targetLen = target.length;\r\n    var beginningIndexes = []; var beginningIndexesLen = 0;\r\n    var wasUpper = false;\r\n    var wasAlphanum = false;\r\n    for(var i = 0; i < targetLen; ++i) {\r\n      var targetCode = target.charCodeAt(i);\r\n      var isUpper = targetCode>=65&&targetCode<=90;\r\n      var isAlphanum = isUpper || targetCode>=97&&targetCode<=122 || targetCode>=48&&targetCode<=57;\r\n      var isBeginning = isUpper && !wasUpper || !wasAlphanum || !isAlphanum;\r\n      wasUpper = isUpper;\r\n      wasAlphanum = isAlphanum;\r\n      if(isBeginning) beginningIndexes[beginningIndexesLen++] = i;\r\n    }\r\n    return beginningIndexes\r\n  };\r\n  var prepareNextBeginningIndexes = (target) => {\r\n    var targetLen = target.length;\r\n    var beginningIndexes = prepareBeginningIndexes(target);\r\n    var nextBeginningIndexes = []; // new Array(targetLen)     sparse array is too slow\r\n    var lastIsBeginning = beginningIndexes[0];\r\n    var lastIsBeginningI = 0;\r\n    for(var i = 0; i < targetLen; ++i) {\r\n      if(lastIsBeginning > i) {\r\n        nextBeginningIndexes[i] = lastIsBeginning;\r\n      } else {\r\n        lastIsBeginning = beginningIndexes[++lastIsBeginningI];\r\n        nextBeginningIndexes[i] = lastIsBeginning===undefined ? targetLen : lastIsBeginning;\r\n      }\r\n    }\r\n    return nextBeginningIndexes\r\n  };\r\n\r\n\r\n  var cleanup = () => { preparedCache.clear(); preparedSearchCache.clear(); matchesSimple = []; matchesStrict = []; };\r\n\r\n  var preparedCache       = new Map();\r\n  var preparedSearchCache = new Map();\r\n  var matchesSimple = []; var matchesStrict = [];\r\n\r\n\r\n  // for use with keys. just returns the maximum score\r\n  var defaultScoreFn = (a) => {\r\n    var max = INT_MIN;\r\n    var len = a.length;\r\n    for (var i = 0; i < len; ++i) {\r\n      var result = a[i]; if(result === NULL) continue\r\n      var score = result.score;\r\n      if(score > max) max = score;\r\n    }\r\n    if(max === INT_MIN) return NULL\r\n    return max\r\n  };\r\n\r\n  // prop = 'key'              2.5ms optimized for this case, seems to be about as fast as direct obj[prop]\r\n  // prop = 'key1.key2'        10ms\r\n  // prop = ['key1', 'key2']   27ms\r\n  var getValue = (obj, prop) => {\r\n    var tmp = obj[prop]; if(tmp !== undefined) return tmp\r\n    var segs = prop;\r\n    if(!Array.isArray(prop)) segs = prop.split('.');\r\n    var len = segs.length;\r\n    var i = -1;\r\n    while (obj && (++i < len)) obj = obj[segs[i]];\r\n    return obj\r\n  };\r\n\r\n  var isObj = (x) => { return typeof x === 'object' }; // faster as a function\r\n  // var INT_MAX = 9007199254740991; var INT_MIN = -INT_MAX\r\n  var INT_MAX = Infinity; var INT_MIN = -INT_MAX;\r\n  var noResults = []; noResults.total = 0;\r\n  var NULL = null;\r\n\r\n\r\n  // Hacked version of https://github.com/lemire/FastPriorityQueue.js\r\n  var fastpriorityqueue=r=>{var e=[],o=0,a={},v=r=>{for(var a=0,v=e[a],c=1;c<o;){var s=c+1;a=c,s<o&&e[s].score<e[c].score&&(a=s),e[a-1>>1]=e[a],c=1+(a<<1);}for(var f=a-1>>1;a>0&&v.score<e[f].score;f=(a=f)-1>>1)e[a]=e[f];e[a]=v;};return a.add=(r=>{var a=o;e[o++]=r;for(var v=a-1>>1;a>0&&r.score<e[v].score;v=(a=v)-1>>1)e[a]=e[v];e[a]=r;}),a.poll=(r=>{if(0!==o){var a=e[0];return e[0]=e[--o],v(),a}}),a.peek=(r=>{if(0!==o)return e[0]}),a.replaceTop=(r=>{e[0]=r,v();}),a};\r\n  var q = fastpriorityqueue(); // reuse this\r\n\r\n\r\n  // fuzzysort is written this way for minification. all names are mangeled unless quoted\r\n  return {'single':single, 'go':go, 'highlight':highlight, 'prepare':prepare, 'indexes':indexes, 'cleanup':cleanup}\r\n}); // UMD\r\n\r\n// TODO: (feature) frecency\r\n// TODO: (perf) use different sorting algo depending on the # of results?\r\n// TODO: (perf) preparedCache is a memory leak\r\n// TODO: (like sublime) backslash === forwardslash\r\n// TODO: (perf) prepareSearch seems slow\n});\n\nvar SortOrder;\n(function (SortOrder) {\n  SortOrder[\"Asc\"] = \"asc\";\n  SortOrder[\"Desc\"] = \"desc\";\n})(SortOrder || (SortOrder = {}));\n\nexport { SortOrder as S, fuzzysort as f };\n"],"names":["fuzzysort","createCommonjsModule","module","root","UMD","commonjsGlobal","_","single","search","target","NULL","preparedSearch","getPreparedSearch","isObj","getPrepared","searchBitflags","algorithm","go","targets","options","all","noResults","threshold","INT_MIN","limit","INT_MAX","resultsLen","limitedCount","targetsLen","key","i","obj","getValue","result","q","scoreFn","defaultScoreFn","keys","keysLen","objResults","keyI","score","results","highlight","hOpen","hClose","highlightCallback","highlighted","matchesIndex","opened","targetLen","indexes","a","b","char","cb","matchI","indexesI","prepare","info","prepareLowerInfo","prepareSearch","spaceSearches","searches","_info","targetPrepared","preparedCache","searchPrepared","preparedSearchCache","prepared","allowSpaces","algorithmSpaces","searchLower","searchLowerCodes","searchLowerCode","targetLowerCodes","searchLen","searchI","targetI","matchesSimpleLen","isMatch","matchesSimple","successStrict","matchesStrictLen","nextBeginningIndexes","prepareNextBeginningIndexes","backtrackCount","lastMatch","matchesStrict","substringIndex","isSubstring","isSubstringBeginning","matchesBest","matchesBestLen","extraMatchGroupCount","unmatchedDistance","uniqueBeginningIndexes","seen_indexes","first_seen_index_last_search","j","allowSpacesResult","index","str","strLen","lower","lowerCodes","bitflags","containsSpace","lowerCode","bit","prepareBeginningIndexes","beginningIndexes","beginningIndexesLen","wasUpper","wasAlphanum","targetCode","isUpper","isAlphanum","isBeginning","lastIsBeginning","lastIsBeginningI","cleanup","max","len","prop","tmp","segs","x","fastpriorityqueue","r","o","v","c","s","f","SortOrder"],"mappings":"qEAEG,IAACA,GAAYC,GAAqB,SAAUC,EAAQ,EACtD,CAACC,EAAMC,IAAQ,CACXF,EAAO,QAASA,EAAO,QAAUE,EAAG,EAClCD,EAAK,UAAeC,GAC3B,GAAGC,GAAgBC,GAAK,CAEtB,IAAIC,EAAS,CAACC,EAAQC,IAAW,CAAyN,GAAGD,GAAQ,UAAU,MAAO,CAAC,OAAO,2BAA2B,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,EAC3U,GAAG,CAACA,GAAU,CAACC,EAAQ,OAAOC,EAE9B,IAAIC,EAAiBC,EAAkBJ,CAAM,EACzCK,EAAMJ,CAAM,IAAGA,EAASK,EAAYL,CAAM,GAE9C,IAAIM,EAAiBJ,EAAe,SACpC,OAAII,EAAiBN,EAAO,aAAeM,EAAuBL,EAE3DM,EAAUL,EAAgBF,CAAM,CAC3C,EAGMQ,EAAK,CAACT,EAAQU,EAASC,IAAY,CAAmN,GAAGX,GAAQ,UAAU,MAAO,CAAC,CAAC,OAAO,2BAA2B,MAAM,EAAE,SAAS,CAAC,CAAC,EAAE,IAAIU,EAAQA,EAAQ,CAAC,EAAER,CAAI,CAAC,EACzW,GAAG,CAACF,EAAQ,OAAOW,GAASA,EAAQ,IAAMC,EAAIZ,EAAQU,EAASC,CAAO,EAAIE,EAE1E,IAAIV,EAAiBC,EAAkBJ,CAAM,EACzCO,EAAiBJ,EAAe,SAEhCW,EAAYH,GAASA,EAAQ,WAAaI,EAC1CC,EAAYL,GAASA,EAAQ,OAAaM,EAE1CC,EAAa,EAAOC,EAAe,EACnCC,EAAaV,EAAQ,OAKzB,GAAGC,GAAWA,EAAQ,IAEpB,QADIU,EAAMV,EAAQ,IACVW,EAAI,EAAGA,EAAIF,EAAY,EAAEE,EAAG,CAAE,IAAIC,EAAMb,EAAQY,CAAC,EACnDrB,EAASuB,EAASD,EAAKF,CAAG,EAC9B,GAAIpB,IACAI,EAAMJ,CAAM,IAAGA,EAASK,EAAYL,CAAM,IAE1CM,EAAiBN,EAAO,aAAeM,GAC3C,KAAIkB,EAASjB,EAAUL,EAAgBF,CAAM,EAC1CwB,IAAWvB,IACXuB,EAAO,MAAQX,IAGlBW,EAAS,CAAC,OAAOA,EAAO,OAAQ,aAAa,GAAI,kBAAkBvB,EAAM,sBAAsBA,EAAM,UAAU,EAAG,MAAMuB,EAAO,MAAO,SAASA,EAAO,SAAU,IAAIF,CAAG,EAEpKL,EAAaF,GAASU,EAAE,IAAID,CAAM,EAAG,EAAEP,IAExC,EAAEC,EACCM,EAAO,MAAQC,EAAE,KAAI,EAAG,OAAOA,EAAE,WAAWD,CAAM,cAKjDd,GAAWA,EAAQ,KAI3B,QAHIgB,EAAUhB,EAAQ,SAAciB,GAChCC,EAAOlB,EAAQ,KACfmB,EAAUD,EAAK,OACXP,EAAI,EAAGA,EAAIF,EAAY,EAAEE,EAAG,CAElC,QAFwCC,EAAMb,EAAQY,CAAC,EACnDS,EAAa,IAAI,MAAMD,CAAO,EACzBE,EAAO,EAAGA,EAAOF,EAAS,EAAEE,EAAM,CACzC,IAAIX,EAAMQ,EAAKG,CAAI,EACf/B,EAASuB,EAASD,EAAKF,CAAG,EAC9B,GAAG,CAACpB,EAAQ,CAAE8B,EAAWC,CAAI,EAAI9B,EAAM,SACnCG,EAAMJ,CAAM,IAAGA,EAASK,EAAYL,CAAM,IAE1CM,EAAiBN,EAAO,aAAeM,EAAgBwB,EAAWC,CAAI,EAAI9B,EACzE6B,EAAWC,CAAI,EAAIxB,EAAUL,EAAgBF,CAAM,EAE1D8B,EAAW,IAAMR,EACjB,IAAIU,EAAQN,EAAQI,CAAU,EAC3BE,IAAU/B,IACV+B,EAAQnB,IACXiB,EAAW,MAAQE,EAChBf,EAAaF,GAASU,EAAE,IAAIK,CAAU,EAAG,EAAEb,IAE5C,EAAEC,EACCc,EAAQP,EAAE,KAAM,EAAC,OAAOA,EAAE,WAAWK,CAAU,SAMtD,SAAQT,EAAI,EAAGA,EAAIF,EAAY,EAAEE,EAAG,CAAE,IAAIrB,EAASS,EAAQY,CAAC,EAC1D,GAAIrB,IACAI,EAAMJ,CAAM,IAAGA,EAASK,EAAYL,CAAM,IAE1CM,EAAiBN,EAAO,aAAeM,GAC3C,KAAIkB,EAASjB,EAAUL,EAAgBF,CAAM,EAC1CwB,IAAWvB,IACXuB,EAAO,MAAQX,IACfI,EAAaF,GAASU,EAAE,IAAID,CAAM,EAAG,EAAEP,IAExC,EAAEC,EACCM,EAAO,MAAQC,EAAE,KAAI,EAAG,OAAOA,EAAE,WAAWD,CAAM,MAK3D,GAAGP,IAAe,EAAG,OAAOL,EAE5B,QADIqB,EAAU,IAAI,MAAMhB,CAAU,EAC1BI,EAAIJ,EAAa,EAAGI,GAAK,EAAG,EAAEA,EAAGY,EAAQZ,CAAC,EAAII,EAAE,KAAI,EAC5D,OAAAQ,EAAQ,MAAQhB,EAAaC,EACtBe,CACX,EAGMC,EAAY,CAACV,EAAQW,EAAOC,IAAW,CACzC,GAAG,OAAOD,GAAU,WAAY,OAAOE,EAAkBb,EAAQW,CAAK,EACtE,GAAGX,IAAWvB,EAAM,OAAOA,EACxBkC,IAAU,SAAWA,EAAQ,OAC7BC,IAAW,SAAWA,EAAS,QAClC,IAAIE,EAAc,GACdC,EAAe,EACfC,EAAS,GACTxC,EAASwB,EAAO,OAChBiB,EAAYzC,EAAO,OACnB0C,EAAUlB,EAAO,SACrBkB,EAAUA,EAAQ,MAAM,EAAGA,EAAQ,GAAG,EAAE,KAAK,CAACC,EAAEC,IAAID,EAAEC,CAAC,EACvD,QAAQvB,EAAI,EAAGA,EAAIoB,EAAW,EAAEpB,EAAG,CAAE,IAAIwB,EAAO7C,EAAOqB,CAAC,EACtD,GAAGqB,EAAQH,CAAY,IAAMlB,GAM3B,GALA,EAAEkB,EACEC,IAAUA,EAAS,GACrBF,GAAeH,GAGdI,IAAiBG,EAAQ,OAAQ,CAClCJ,GAAeO,EAAOT,EAASpC,EAAO,OAAOqB,EAAE,CAAC,EAChD,YAGCmB,IAAUA,EAAS,GACpBF,GAAeF,GAGnBE,GAAeO,EAGjB,OAAOP,CACX,EACMD,EAAoB,CAACb,EAAQsB,IAAO,CACtC,GAAGtB,IAAWvB,EAAM,OAAOA,EAC3B,IAAID,EAASwB,EAAO,OAChBiB,EAAYzC,EAAO,OACnB0C,EAAUlB,EAAO,SACrBkB,EAAUA,EAAQ,MAAM,EAAGA,EAAQ,GAAG,EAAE,KAAK,CAACC,EAAEC,IAAID,EAAEC,CAAC,EAMvD,QALIN,EAAc,GACdS,EAAS,EACTC,EAAW,EACXR,EAAS,GACThB,EAAS,CAAA,EACLH,EAAI,EAAGA,EAAIoB,EAAW,EAAEpB,EAAG,CAAE,IAAIwB,EAAO7C,EAAOqB,CAAC,EACtD,GAAGqB,EAAQM,CAAQ,IAAM3B,GAMvB,GALA,EAAE2B,EACER,IAAUA,EAAS,GACrBhB,EAAO,KAAKc,CAAW,EAAGA,EAAc,IAGvCU,IAAaN,EAAQ,OAAQ,CAC9BJ,GAAeO,EACfrB,EAAO,KAAKsB,EAAGR,EAAaS,GAAQ,CAAC,EAAGT,EAAc,GACtDd,EAAO,KAAKxB,EAAO,OAAOqB,EAAE,CAAC,CAAC,EAC9B,YAGCmB,IAAUA,EAAS,GACpBhB,EAAO,KAAKsB,EAAGR,EAAaS,GAAQ,CAAC,EAAGT,EAAc,IAG1DA,GAAeO,EAEjB,OAAOrB,CACX,EAGMkB,EAAUlB,GAAUA,EAAO,SAAS,MAAM,EAAGA,EAAO,SAAS,GAAG,EAAE,KAAK,CAACmB,EAAEC,IAAID,EAAEC,CAAC,EAGjFK,EAAWjD,GAAW,CACrB,OAAOA,GAAW,WAAUA,EAAS,IACxC,IAAIkD,EAAOC,EAAiBnD,CAAM,EAClC,MAAO,CAAC,OAASA,EAAQ,aAAakD,EAAK,OAAQ,kBAAkBA,EAAK,WAAY,sBAAsBjD,EAAM,UAAUiD,EAAK,SAAU,MAAQjD,EAAM,SAAS,CAAC,CAAC,EAAG,IAAMA,CAAI,CACrL,EASMmD,EAAiBrD,GAAW,CAC3B,OAAOA,GAAW,WAAUA,EAAS,IACxCA,EAASA,EAAO,OAChB,IAAImD,EAAOC,EAAiBpD,CAAM,EAE9BsD,EAAgB,CAAA,EACpB,GAAGH,EAAK,cAAe,CACrB,IAAII,EAAWvD,EAAO,MAAM,KAAK,EACjCuD,EAAW,CAAC,GAAG,IAAI,IAAIA,CAAQ,CAAC,EAChC,QAAQjC,EAAE,EAAGA,EAAEiC,EAAS,OAAQjC,IAC9B,GAAGiC,EAASjC,CAAC,IAAM,GACnB,KAAIkC,EAAQJ,EAAiBG,EAASjC,CAAC,CAAC,EACxCgC,EAAc,KAAK,CAAC,WAAWE,EAAM,WAAY,OAAOD,EAASjC,CAAC,EAAE,YAAW,EAAI,cAAc,EAAK,CAAC,GAI3G,MAAO,CAAC,WAAY6B,EAAK,WAAY,SAAUA,EAAK,SAAU,cAAeA,EAAK,cAAe,OAAQA,EAAK,OAAQ,cAAeG,CAAa,CACtJ,EAIMhD,EAAeL,GAAW,CAC5B,GAAGA,EAAO,OAAS,IAAK,OAAOiD,EAAQjD,CAAM,EAC7C,IAAIwD,EAAiBC,EAAc,IAAIzD,CAAM,EAC7C,OAAGwD,IAAmB,SACtBA,EAAiBP,EAAQjD,CAAM,EAC/ByD,EAAc,IAAIzD,EAAQwD,CAAc,GACjCA,CACX,EACMrD,EAAqBJ,GAAW,CAClC,GAAGA,EAAO,OAAS,IAAK,OAAOqD,EAAcrD,CAAM,EACnD,IAAI2D,EAAiBC,EAAoB,IAAI5D,CAAM,EACnD,OAAG2D,IAAmB,SACtBA,EAAiBN,EAAcrD,CAAM,EACrC4D,EAAoB,IAAI5D,EAAQ2D,CAAc,GACvCA,CACX,EAGM/C,EAAM,CAACZ,EAAQU,EAASC,IAAY,CACtC,IAAIuB,EAAU,CAAA,EAAIA,EAAQ,MAAQxB,EAAQ,OAE1C,IAAIM,EAAQL,GAAWA,EAAQ,OAASM,EAExC,GAAGN,GAAWA,EAAQ,IACpB,QAAQW,EAAE,EAAEA,EAAEZ,EAAQ,OAAOY,IAAK,CAAE,IAAIC,EAAMb,EAAQY,CAAC,EACjDrB,EAASuB,EAASD,EAAKZ,EAAQ,GAAG,EACtC,GAAIV,EACJ,CAAII,EAAMJ,CAAM,IAAGA,EAASK,EAAYL,CAAM,GAC9CA,EAAO,MAAQc,EACfd,EAAO,SAAS,IAAM,EACtB,IAAIwB,EAASxB,EAES,GADtBwB,EAAS,CAAC,OAAOA,EAAO,OAAQ,aAAa,GAAI,kBAAkBvB,EAAM,sBAAsBA,EAAM,UAAU,EAAG,MAAMD,EAAO,MAAO,SAASC,EAAM,IAAIqB,CAAG,EAC5JW,EAAQ,KAAKT,CAAM,EAAMS,EAAQ,QAAUlB,EAAO,OAAOkB,WAEnDvB,GAAWA,EAAQ,KAC3B,QAAQW,EAAE,EAAEA,EAAEZ,EAAQ,OAAOY,IAAK,CAEhC,QAFsCC,EAAMb,EAAQY,CAAC,EACjDS,EAAa,IAAI,MAAMpB,EAAQ,KAAK,MAAM,EACrCqB,EAAOrB,EAAQ,KAAK,OAAS,EAAGqB,GAAQ,EAAG,EAAEA,EAAM,CAC1D,IAAI/B,EAASuB,EAASD,EAAKZ,EAAQ,KAAKqB,CAAI,CAAC,EAC7C,GAAG,CAAC/B,EAAQ,CAAE8B,EAAWC,CAAI,EAAI9B,EAAM,SACnCG,EAAMJ,CAAM,IAAGA,EAASK,EAAYL,CAAM,GAC9CA,EAAO,MAAQc,EACfd,EAAO,SAAS,IAAM,EACtB8B,EAAWC,CAAI,EAAI/B,EAIK,GAF1B8B,EAAW,IAAMR,EACjBQ,EAAW,MAAQhB,EACnBmB,EAAQ,KAAKH,CAAU,EAAMG,EAAQ,QAAUlB,EAAO,OAAOkB,MAG/D,SAAQZ,EAAE,EAAEA,EAAEZ,EAAQ,OAAOY,IAAK,CAAE,IAAIrB,EAASS,EAAQY,CAAC,EACxD,GAAIrB,IACAI,EAAMJ,CAAM,IAAGA,EAASK,EAAYL,CAAM,GAC9CA,EAAO,MAAQc,EACfd,EAAO,SAAS,IAAM,EACtBiC,EAAQ,KAAKjC,CAAM,EAAMiC,EAAQ,QAAUlB,GAAO,OAAOkB,EAI7D,OAAOA,CACX,EAGM1B,EAAY,CAACL,EAAgB0D,EAAUC,EAAY,KAAU,CAC/D,GAAGA,IAAc,IAAS3D,EAAe,cAAe,OAAO4D,EAAgB5D,EAAgB0D,CAAQ,EAevG,QAbIG,EAAc7D,EAAe,OAC7B8D,EAAmB9D,EAAe,WAClC+D,EAAkBD,EAAiB,CAAC,EACpCE,EAAmBN,EAAS,kBAC5BO,EAAYH,EAAiB,OAC7BvB,EAAYyB,EAAiB,OAC7BE,EAAU,EACVC,EAAU,EACVC,EAAmB,IAKf,CACN,IAAIC,EAAUN,IAAoBC,EAAiBG,CAAO,EAC1D,GAAGE,EAAS,CAEC,GADXC,EAAcF,GAAkB,EAAID,EACpC,EAAED,EAAYA,IAAYD,EAAW,MACrCF,EAAkBD,EAAiBI,CAAO,EAEjC,GAAX,EAAEC,EAAYA,GAAW5B,EAAW,OAAOxC,EAG7C,IAAImE,EAAU,EACVK,EAAgB,GAChBC,EAAmB,EAEnBC,EAAuBf,EAAS,sBACjCe,IAAyB1E,IAAM0E,EAAuBf,EAAS,sBAAwBgB,GAA4BhB,EAAS,MAAM,GACrIS,EAAUG,EAAc,CAAC,IAAI,EAAI,EAAIG,EAAqBH,EAAc,CAAC,EAAE,CAAC,EAK5E,IAAIK,EAAiB,EACrB,GAAGR,IAAY5B,EAAW,OACxB,GAAG4B,GAAW5B,EAAW,CAIL,GAFf2B,GAAW,IAEd,EAAES,EAAmBA,EAAiB,KAAK,MAE3C,EAAET,EACF,IAAIU,EAAYC,EAAc,EAAEL,CAAgB,EAChDL,EAAUM,EAAqBG,CAAS,MAEnC,CACL,IAAIP,EAAUP,EAAiBI,CAAO,IAAMF,EAAiBG,CAAO,EACpE,GAAGE,EAAS,CAEC,GADXQ,EAAcL,GAAkB,EAAIL,EACpC,EAAED,EAAYA,IAAYD,EAAW,CAAEM,EAAgB,GAAM,MAC7D,EAAEJ,OAEFA,EAAUM,EAAqBN,CAAO,EAM5C,IAAIW,EAAiBpB,EAAS,aAAa,QAAQG,EAAaS,EAAc,CAAC,CAAC,EAC5ES,EAAc,CAACD,EACnB,GAAGC,GAAe,CAACR,EACjB,QAAQpD,EAAE,EAAGA,EAAEiD,EAAkB,EAAEjD,EAAGmD,EAAcnD,CAAC,EAAI2D,EAAe3D,EAE1E,IAAI6D,EAAuB,GACxBD,IACDC,EAAuBtB,EAAS,sBAAsBoB,EAAe,CAAC,IAAMA,GAG9E,CACE,GAAGP,EAAiB,IAAIU,EAAcJ,EAAmBK,EAAiBV,MACnE,KAAIS,EAAcX,EAAmBY,EAAiBd,EAK7D,QAHItC,EAAQ,EAERqD,EAAuB,EACnBhE,EAAI,EAAGA,EAAI8C,EAAW,EAAE9C,EAC3B8D,EAAY9D,CAAC,EAAI8D,EAAY9D,EAAE,CAAC,IAAM,IAAIW,GAASmD,EAAY9D,CAAC,EAAG,EAAEgE,GAE1E,IAAIC,GAAoBH,EAAYhB,EAAU,CAAC,EAAIgB,EAAY,CAAC,GAAKhB,EAAU,GAM/E,GAJAnC,IAAU,GAAGsD,IAAqBD,EAE/BF,EAAY,CAAC,IAAM,IAAGnD,GAASmD,EAAY,CAAC,EAAEA,EAAY,CAAC,EAAE,IAE7D,CAACV,EACFzC,GAAS,QACJ,CAGL,QADIuD,EAAyB,EACrBlE,EAAIsD,EAAqB,CAAC,EAAGtD,EAAIoB,EAAWpB,EAAEsD,EAAqBtD,CAAC,EAAG,EAAEkE,EAE9EA,EAAyB,KAAIvD,IAAUuD,EAAuB,IAAI,IAGpEN,IAAsBjD,GAAS,EAAEmC,EAAUA,EAAU,GACrDe,IAAsBlD,GAAS,EAAEmC,EAAUA,EAAU,GAExDnC,GAASS,EAAY0B,EACrBP,EAAS,MAAQ5B,EAEjB,QAAQX,EAAI,EAAGA,EAAI+D,EAAgB,EAAE/D,EAAGuC,EAAS,SAASvC,CAAC,EAAI8D,EAAY9D,CAAC,EAC5E,OAAAuC,EAAS,SAAS,IAAMwB,EAEjBxB,CACR,CACL,EACME,EAAkB,CAAC5D,EAAgBF,IAAW,CAOhD,QANIwF,EAAe,IAAI,IACnBxD,EAAQ,EACRR,EAASvB,EAETwF,EAA+B,EAC/BnC,EAAWpD,EAAe,cACtBmB,EAAE,EAAGA,EAAEiC,EAAS,OAAQ,EAAEjC,EAAG,CACnC,IAAItB,EAASuD,EAASjC,CAAC,EAGvB,GADAG,EAASjB,EAAUR,EAAQC,CAAM,EAC9BwB,IAAWvB,EAAM,OAAOA,EAE3B+B,GAASR,EAAO,MAGbA,EAAO,SAAS,CAAC,EAAIiE,IACtBzD,GAASyD,EAA+BjE,EAAO,SAAS,CAAC,GAE3DiE,EAA+BjE,EAAO,SAAS,CAAC,EAEhD,QAAQkE,EAAE,EAAGA,EAAElE,EAAO,SAAS,IAAK,EAAEkE,EAAGF,EAAa,IAAIhE,EAAO,SAASkE,CAAC,CAAC,EAI9E,IAAIC,EAAoBpF,EAAUL,EAAgBF,EAAwB,EAAI,EAC9E,GAAG2F,IAAsB1F,GAAQ0F,EAAkB,MAAQ3D,EACzD,OAAO2D,EAGTnE,EAAO,MAAQQ,EAEf,IAAIX,EAAI,EACR,QAASuE,KAASJ,EAAchE,EAAO,SAASH,GAAG,EAAIuE,EACvD,OAAApE,EAAO,SAAS,IAAMH,EAEfG,CACX,EAGM2B,EAAoB0C,GAAQ,CAO9B,QANIC,EAASD,EAAI,OACbE,EAAQF,EAAI,cACZG,EAAa,CAAA,EACbC,EAAW,EACXC,EAAgB,GAEZ7E,EAAI,EAAGA,EAAIyE,EAAQ,EAAEzE,EAAG,CAC9B,IAAI8E,EAAYH,EAAW3E,CAAC,EAAI0E,EAAM,WAAW1E,CAAC,EAElD,GAAG8E,IAAc,GAAI,CACnBD,EAAgB,GAChB,SAGF,IAAIE,EAAMD,GAAW,IAAIA,GAAW,IAAMA,EAAU,GAC1CA,GAAW,IAAIA,GAAW,GAAM,GAEhCA,GAAW,IAAqB,GACA,GAC1CF,GAAY,GAAGG,EAGjB,MAAO,CAAC,WAAWJ,EAAY,SAASC,EAAU,cAAcC,EAAe,OAAOH,CAAK,CAC/F,EACMM,GAA2BrG,GAAW,CAKxC,QAJIyC,EAAYzC,EAAO,OACnBsG,EAAmB,CAAE,EAAMC,EAAsB,EACjDC,EAAW,GACXC,EAAc,GACVpF,EAAI,EAAGA,EAAIoB,EAAW,EAAEpB,EAAG,CACjC,IAAIqF,EAAa1G,EAAO,WAAWqB,CAAC,EAChCsF,EAAUD,GAAY,IAAIA,GAAY,GACtCE,EAAaD,GAAWD,GAAY,IAAIA,GAAY,KAAOA,GAAY,IAAIA,GAAY,GACvFG,EAAcF,GAAW,CAACH,GAAY,CAACC,GAAe,CAACG,EAC3DJ,EAAWG,EACXF,EAAcG,EACXC,IAAaP,EAAiBC,GAAqB,EAAIlF,GAE5D,OAAOiF,CACX,EACM1B,GAA+B5E,GAAW,CAM5C,QALIyC,EAAYzC,EAAO,OACnBsG,EAAmBD,GAAwBrG,CAAM,EACjD2E,EAAuB,CAAA,EACvBmC,EAAkBR,EAAiB,CAAC,EACpCS,EAAmB,EACf1F,EAAI,EAAGA,EAAIoB,EAAW,EAAEpB,EAC3ByF,EAAkBzF,EACnBsD,EAAqBtD,CAAC,EAAIyF,GAE1BA,EAAkBR,EAAiB,EAAES,CAAgB,EACrDpC,EAAqBtD,CAAC,EAAIyF,IAAkB,OAAYrE,EAAYqE,GAGxE,OAAOnC,CACX,EAGMqC,GAAU,IAAM,CAAEvD,EAAc,MAAK,EAAIE,EAAoB,MAAK,EAAIa,EAAgB,CAAE,EAAEO,EAAgB,CAAA,CAAG,EAE7GtB,EAAsB,IAAI,IAC1BE,EAAsB,IAAI,IAC1Ba,EAAgB,CAAE,EAAMO,EAAgB,CAAA,EAIxCpD,GAAkB,GAAM,CAG1B,QAFIsF,EAAMnG,EACNoG,EAAM,EAAE,OACH,EAAI,EAAG,EAAIA,EAAK,EAAE,EAAG,CAC5B,IAAI1F,EAAS,EAAE,CAAC,EAAG,GAAGA,IAAWvB,EACjC,KAAI+B,EAAQR,EAAO,MAChBQ,EAAQiF,IAAKA,EAAMjF,IAExB,OAAGiF,IAAQnG,EAAgBb,EACpBgH,CACX,EAKM1F,EAAW,CAACD,EAAK6F,IAAS,CAC5B,IAAIC,EAAM9F,EAAI6F,CAAI,EAAG,GAAGC,IAAQ,OAAW,OAAOA,EAClD,IAAIC,EAAOF,EACP,MAAM,QAAQA,CAAI,IAAGE,EAAOF,EAAK,MAAM,GAAG,GAG9C,QAFID,EAAMG,EAAK,OACXhG,EAAI,GACDC,GAAQ,EAAED,EAAI6F,GAAM5F,EAAMA,EAAI+F,EAAKhG,CAAC,CAAC,EAC5C,OAAOC,CACX,EAEMlB,EAASkH,GAAe,OAAOA,GAAM,SAErCtG,EAAU,IAAcF,EAAU,CAACE,EACnCJ,EAAY,CAAE,EAAEA,EAAU,MAAQ,EACtC,IAAIX,EAAO,KAIPsH,GAAkBC,GAAG,CAAC,IAAI,EAAE,CAAA,EAAGC,EAAE,EAAE9E,EAAE,CAAA,EAAG+E,EAAEF,GAAG,CAAC,QAAQ7E,EAAE,EAAE+E,EAAE,EAAE/E,CAAC,EAAEgF,EAAE,EAAEA,EAAEF,GAAG,CAAC,IAAIG,EAAED,EAAE,EAAEhF,EAAEgF,EAAEC,EAAEH,GAAG,EAAEG,CAAC,EAAE,MAAM,EAAED,CAAC,EAAE,QAAQhF,EAAEiF,GAAG,EAAEjF,EAAE,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAEgF,EAAE,GAAGhF,GAAG,GAAI,QAAQkF,EAAElF,EAAE,GAAG,EAAEA,EAAE,GAAG+E,EAAE,MAAM,EAAEG,CAAC,EAAE,MAAMA,GAAGlF,EAAEkF,GAAG,GAAG,EAAE,EAAElF,CAAC,EAAE,EAAEkF,CAAC,EAAE,EAAElF,CAAC,EAAE+E,CAAE,EAAE,OAAO/E,EAAE,IAAK6E,GAAG,CAAC,IAAI7E,EAAE8E,EAAE,EAAEA,GAAG,EAAED,EAAE,QAAQE,EAAE/E,EAAE,GAAG,EAAEA,EAAE,GAAG6E,EAAE,MAAM,EAAEE,CAAC,EAAE,MAAMA,GAAG/E,EAAE+E,GAAG,GAAG,EAAE,EAAE/E,CAAC,EAAE,EAAE+E,CAAC,EAAE,EAAE/E,CAAC,EAAE6E,CAAE,EAAG7E,EAAE,KAAM6E,GAAG,CAAC,GAAOC,IAAJ,EAAM,CAAC,IAAI9E,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE8E,CAAC,EAAEC,EAAG,EAAC/E,EAAE,EAAGA,EAAE,KAAM6E,GAAG,CAAC,GAAOC,IAAJ,EAAM,OAAO,EAAE,CAAC,CAAC,EAAG9E,EAAE,WAAY6E,GAAG,CAAC,EAAE,CAAC,EAAEA,EAAEE,GAAI,EAAG/E,CAAC,EAC7clB,EAAI8F,KAIR,MAAO,CAAC,OAASzH,EAAQ,GAAKU,EAAI,UAAY0B,EAAW,QAAUe,EAAS,QAAUP,EAAS,QAAUsE,EAAO,CAClH,CAAC,CAOD,CAAC,EAEGc,GACH,SAAUA,EAAW,CACpBA,EAAU,IAAS,MACnBA,EAAU,KAAU,MACtB,GAAGA,IAAcA,EAAY,CAAA,EAAG"}